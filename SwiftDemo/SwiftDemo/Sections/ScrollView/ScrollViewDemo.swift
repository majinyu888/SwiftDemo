//
//  ScrollViewDemo.swift
//  SwiftDemo
//
//  Created by hb on 2017/6/23.
//  Copyright © 2017年 com.bm.hb. All rights reserved.
//

import UIKit

class ScrollViewDemo: UIViewController {
    
    
    //MARK: - Life Cycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        consLableWidth.constant = UIScreen.main.bounds.size.width - 16;
        
        contentLabel.text = "机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？机会我们现在面对的情况是：常规的尝试最终得到了相同的结果，所以我们被迫在知识的集合之外进行思考，那么不妨让想法大胆一点或者转换一下……不同的思路 ？如何创建一个强类型的对象数组，并且访问它们的属性时不需要类型转换？"
        
        
    }
    
    //MARK: - Private Propertys
    
    //MARK: - IB
    
    /// UI
    /// 上下左右 + 宽度  (剩下的高度是自动算的哦)
    /// line 为 0
    @IBOutlet weak var contentLabel: UILabel!
    
    /// cons
    @IBOutlet weak var consLableWidth: NSLayoutConstraint!
    
    
    
    
}
